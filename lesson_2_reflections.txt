What happens when you initialize a repository? Why do you need to do it?

>>it creates a new repository with a .git folder. we need to do this when we want to start tracking the changes in the project

How is the staging area different from the working directory and the repository?
What value do you think it offers?

>> provides the area to collate the commit changes before making it part of the repository

How can you use the staging area to make sure you have one commit per logical
change?

>>by add smaller commits

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

>> for experimental changes, new features when the master is growing. Or non offical changes.
>> master branch can be the production quality code that is always up to date and never expected to break
>> also help in collaborating as working on the same branch can be difficult or coordinate


How do the diagrams help you visualize the branch structure?

>> since the commits can be non linear, its easier to understand as a graph

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

>> a combined code base of the two branches. 
>> to make it easier to visualize


What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

Manual merge give more clarity and fleibility on what we want to commit. 
To be continued.. 